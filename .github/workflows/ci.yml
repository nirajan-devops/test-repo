name: Universal CI Workflow

on:
  workflow_call:
    inputs:
      language:
        type: string
        required: true
        description: "Project language: node, react, next, python, php, java"
      build-command:
        type: string
        required: false
        default: ""
        description: "Custom build command to run"
      working-directory:
        type: string
        required: false
        default: "."
        description: "Directory where the code lives"
      test-command:
        type: string
        required: false
        default: ""
        description: "Custom test command to run"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      ########################
      # Setup per language
      ########################
      - name: Set up Node.js
        if: ${{ contains(fromJson('["node", "next", "react"]'), inputs.language) }}
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Set up Python
        if: ${{ inputs.language == 'python' }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up PHP
        if: ${{ inputs.language == 'php' }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Set up Java
        if: ${{ inputs.language == 'java' }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      ########################
      # Install dependencies
      ########################
      - name: Install dependencies
        run: |
          case "${{ inputs.language }}" in
            node|next|react)
              npm install
              ;;
            python)
              pip install -r requirements.txt
              ;;
            php)
              composer install
              ;;
            java)
              ./mvnw install
              ;;
          esac
        working-directory: ${{ inputs.working-directory }}

      ########################
      # Build
      ########################
      - name: Run build
        if: ${{ inputs.build-command != '' }}
        run: ${{ inputs.build-command }}
        working-directory: ${{ inputs.working-directory }}

      ########################
      # Test (Optional)
      ########################
      - name: Run tests
        if: ${{ inputs.test-command != '' }}
        run: ${{ inputs.test-command }}
        working-directory: ${{ inputs.working-directory }}

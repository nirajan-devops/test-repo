# .github/workflows/deploy.yml (Reusable)
name: Reusable Docker Deploy

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      container-name:
        required: true
        type: string
      port:
        required: true
        type: string
      dockerfile-path:
        required: false
        type: string
        default: "Dockerfile"
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
      HOST:
        required: true
      USERNAME:
        required: true
      SSH_PRIVATE_KEY:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t ${{ inputs.image-name }} -f ${{ inputs.dockerfile-path }} .

      - name: Save Docker image to tar
        run: docker save ${{ inputs.image-name }} -o app.tar

      - name: Copy image to server via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "app.tar"
          target: "/home/${{ secrets.USERNAME }}/"
          overwrite: true

      - name: Install Docker and deploy container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Install Docker if needed
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
            fi

            cd /home/${{ secrets.USERNAME }}

            echo "Checking that app.tar exists:"
            ls -lh app.tar

            # Load the Docker image
            sudo docker load -i app.tar

            # Stop and remove existing container
            sudo docker stop ${{ inputs.container-name }} || true
            sudo docker rm ${{ inputs.container-name }} || true

            # Run the new container
            sudo docker run -d -p ${{ inputs.port }}:${{ inputs.port }} --name ${{ inputs.container-name }} ${{ inputs.image-name }}
      - name: Notify Slack on Success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"✅ CI Workflow *${{ github.workflow }}* succeeded for `${{ github.repository }}` on branch `${{ github.ref_name }}`."}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"❌ CI Workflow *${{ github.workflow }}* failed for `${{ github.repository }}` on branch `${{ github.ref_name }}`."}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}         
